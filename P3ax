local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EnhancedToggleGui"
screenGui.Parent = game.CoreGui

-- Create Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 300)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Add UI Corner for Rounded Edges
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = mainFrame

-- Add Gradient Background
local uiGradient = Instance.new("UIGradient")
uiGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 255))
}
uiGradient.Parent = mainFrame

-- Create Promotion Label
local label = Instance.new("TextLabel")
label.Name = "PromotionLabel"
label.Text = "P3ax"
label.Size = UDim2.new(0, 100, 0, 30)
label.Position = UDim2.new(0, 20, 0, 20)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.SourceSansBold
label.TextSize = 20
label.Parent = mainFrame

-- Button Style with Gradient
local function createStylishButton(name, text, position)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = text
    button.Size = UDim2.new(0, 260, 0, 50)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 18
    button.Parent = mainFrame

    -- Add rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = button

    -- Add gradient effect
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 128, 0)), -- Gradient start
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 128, 255)) -- Gradient end
    }
    gradient.Parent = button

    return button
end

-- ESP Buttons
local espButton = createStylishButton("ESPButton", "ESP: OFF", UDim2.new(0, 20, 0, 60))
local rgbEspButton = createStylishButton("RGBESPButton", "RGB ESP: OFF", UDim2.new(0, 20, 0, 120))
local aimbotButton = createStylishButton("AimbotButton", "Aimbot: OFF", UDim2.new(0, 20, 0, 180))

local espEnabled = false
local rgbEspEnabled = false
local aimbotEnabled = false
local rainbowLoop

-- ESP Toggle
espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    if espEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.FillTransparency = 1
                highlight.OutlineTransparency = 0
                highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
                highlight.Parent = player.Character
            end
        end
    else
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                for _, obj in pairs(player.Character:GetChildren()) do
                    if obj:IsA("Highlight") then
                        obj:Destroy()
                    end
                end
            end
        end
    end
end)

-- RGB ESP Toggle
rgbEspButton.MouseButton1Click:Connect(function()
    rgbEspEnabled = not rgbEspEnabled
    rgbEspButton.Text = rgbEspEnabled and "RGB ESP: ON" or "RGB ESP: OFF"

    if rgbEspEnabled then
        rainbowLoop = game:GetService("RunService").RenderStepped:Connect(function()
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    local highlight = player.Character:FindFirstChildOfClass("Highlight")
                    if not highlight then
                        highlight = Instance.new("Highlight")
                        highlight.FillTransparency = 1
                        highlight.OutlineTransparency = 0
                        highlight.Parent = player.Character
                    end
                    local hue = (tick() % 5) / 5
                    highlight.OutlineColor = Color3.fromHSV(hue, 1, 1)
                end
            end
        end)
    else
        if rainbowLoop then
            rainbowLoop:Disconnect()
        end
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                for _, obj in pairs(player.Character:GetChildren()) do
                    if obj:IsA("Highlight") then
                        obj:Destroy()
                    end
                end
            end
        end
    end
end)

-- Aimbot Logic
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Locked = false
local TargetHead = nil

local function GetClosestHead()
    local closestDistance = math.huge
    local closestHead = nil
    local maxRange = 300 -- Range limit

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local headPosition = head.Position
            local distance = (headPosition - LocalPlayer.Character.Head.Position).Magnitude

            if distance <= maxRange then
                local screenPosition, onScreen = Camera:WorldToViewportPoint(headPosition)
                if onScreen then
                    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                    local screenDistance = (screenCenter - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                    if screenDistance < closestDistance then
                        closestDistance = screenDistance
                        closestHead = head
                    end
                end
            end
        end
    end

    return closestHead
end

local function LockOntoHead()
    if Locked and TargetHead and TargetHead.Parent then
        local headPosition = TargetHead.Position
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, headPosition)
    end
end

aimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    aimbotButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
    if aimbotEnabled then
        Locked = true
        TargetHead = GetClosestHead()
    else
        Locked = false
        TargetHead = nil
    end
end)

RunService.RenderStepped:Connect(function()
    if Locked then
        LockOntoHead()
    end
end)

-- Draggable Frame
local dragToggle = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Consumed = true
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if dragToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
        updateDrag(input)
    end
end)

mainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = false
    end
end)

-- Minimize and Maximize Buttons
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Text = "-"
minimizeButton.Size = UDim2.new(0, 40, 0, 40)
minimizeButton.Position = UDim2.new(1, -50, 0, 10)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSans
minimizeButton.TextSize = 20
minimizeButton.Visible = true
minimizeButton.Parent = mainFrame

local maximizeButton = Instance.new("TextButton")
maximizeButton.Name = "MaximizeButton"
maximizeButton.Text = "+"
maximizeButton.Size = UDim2.new(0, 40, 0, 40)
maximizeButton.Position = UDim2.new(1, -50, 0, 10)
maximizeButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
maximizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
maximizeButton.Font = Enum.Font.SourceSans
maximizeButton.TextSize = 20
maximizeButton.Visible = false
maximizeButton.Parent = mainFrame

-- Minimize/Maximize Logic
minimizeButton.MouseButton1Click:Connect(function()
    mainFrame.Size = UDim2.new(0, 300, 0, 50)
    label.Visible = false
    espButton.Visible = false
    rgbEspButton.Visible = false
    aimbotButton.Visible = false
    maximizeButton.Visible = true
    minimizeButton.Visible = false
end)

maximizeButton.MouseButton1Click:Connect(function()
    mainFrame.Size = UDim2.new(0, 300, 0, 300)
    label.Visible = true
    espButton.Visible = true
    rgbEspButton.Visible = true
    aimbotButton.Visible = true
    maximizeButton.Visible = false
    minimizeButton.Visible = true
end)
